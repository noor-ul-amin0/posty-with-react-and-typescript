{"version":3,"sources":["components/SideDrawer.tsx","components/Header.tsx","components/BlogPost.tsx","api.ts","hooks/usePosts.ts","components/Spinner.tsx","utils/index.ts","components/Scroll.tsx","containers/BlogPosts.tsx","components/Home.tsx","hooks/useUsers.ts","components/UserItem.tsx","containers/UsersList.tsx","containers/Profile.tsx","routes.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SideDrawer","sideItems","isDrawerOpen","toggleDrawer","navigate","useNavigate","Fragment","Drawer","open","onClose","Box","sx","width","role","onClick","onKeyDown","List","map","id","title","Icon","icon","link","ListItem","button","ListItemIcon","ListItemText","primary","items","NavBar","React","useState","setIsDrawerOpen","anchorEl","setAnchorEl","state","event","type","key","handleClose","flexGrow","AppBar","position","color","Toolbar","IconButton","size","edge","mr","Typography","variant","component","style","cursor","Button","currentTarget","AccountCircle","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","BlogPost","props","post","Card","maxWidth","height","backgroundColor","display","flexDirection","justifyContent","CardHeader","avatar","Avatar","alt","owner","firstName","src","picture","action","lastName","subheader","Date","publishDate","toUTCString","CardMedia","image","text","CardContent","CardActions","disableSpacing","likes","api","axios","create","headers","baseURL","usePosts","page","limit","useQuery","get","then","res","data","keepPreviousData","override","css","Spinner","Grid","container","spacing","direction","alignItems","margin","top","className","loading","returnTotolPages","dataLength","Math","floor","useStyles","makeStyles","theme","toTop","zIndex","bottom","transition","right","breakpoints","up","Scroll","showBelow","classes","show","setShow","handleScroll","window","pageYOffset","useEffect","addEventListener","removeEventListener","behavior","ExpandLess","createTheme","BlogPosts","setPage","isLoading","error","Alert","severity","message","ThemeProvider","CssBaseline","Container","mt","item","xs","md","Pagination","onChange","value","count","total","Home","author","quote","setQuote","status","content","catch","e","Paper","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","left","p","pr","gutterBottom","paragraph","textDecoration","useUsers","UserItem","users","user","bgcolor","ListItemAvatar","secondary","Divider","UsersList","isFetching","Profile","routes","isLoggedIn","path","element","App","routing","useRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.f9223cdc.chunk.js","sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SideDrawerProp } from \"../types/Types\";\n\nexport default function SideDrawer({\n  sideItems,\n  isDrawerOpen,\n  toggleDrawer,\n}: SideDrawerProp) {\n  const navigate = useNavigate();\n  const list = () => (\n    <Box\n      sx={{ width: 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {sideItems.map(({ id, title, icon: Icon, link }) => (\n          <ListItem button key={id} onClick={() => navigate(link || \"/\")}>\n            <ListItemIcon>{Icon}</ListItemIcon>\n            <ListItemText primary={title} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <div>\n      <React.Fragment>\n        <Drawer open={isDrawerOpen} onClose={toggleDrawer(false)}>\n          {list()}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n// import Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { useNavigate } from \"react-router-dom\";\nimport SideDrawer from \"./SideDrawer\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nimport { Button, Menu, MenuItem } from \"@mui/material\";\nimport { AccountCircle } from \"@mui/icons-material\";\nimport MarkunreadMailboxIcon from \"@mui/icons-material/MarkunreadMailbox\";\nimport { Item } from \"../types/Types\";\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline,\n  GoogleLogout,\n} from \"react-google-login\";\nimport { OAuthConfig } from \"../config\";\n\nconst items: Item[] = [\n  { id: 1, title: \"Posts\", icon: <MarkunreadMailboxIcon />, link: \"/posts\" },\n  { id: 2, title: \"Users\", icon: <PeopleIcon />, link: \"/users\" },\n  { id: 3, title: \"Send email\", icon: <InboxIcon /> },\n];\nexport default function NavBar() {\n  const [isDrawerOpen, setIsDrawerOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const toggleDrawer =\n    (state: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setIsDrawerOpen(state);\n    };\n  const navigate = useNavigate();\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    navigate(\"/profile\");\n  };\n  const successResponseGoogle = (\n    response: GoogleLoginResponse | GoogleLoginResponseOffline\n  ) => {\n    console.log(response);\n  };\n\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\" color=\"secondary\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n              onClick={toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              onClick={() => navigate(\"/\")}\n              variant=\"h6\"\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              <span style={{ cursor: \"pointer\" }}>Posty</span>\n            </Typography>\n            <Button color=\"inherit\" onClick={() => {}}>\n              Login\n            </Button>\n            {/* <GoogleLogin\n              clientId={OAuthConfig.web.client_id}\n              buttonText=\"Login\"\n              onSuccess={successResponseGoogle}\n              onFailure={() => alert(\"Something went wrong, please try again.\")}\n              cookiePolicy={\"single_host_origin\"}\n            /> */}\n            <>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>\n                  Logout\n                  {/* <GoogleLogout\n                    clientId={OAuthConfig.web.client_id}\n                    buttonText=\"Logout\"\n                    onLogoutSuccess={() => navigate(\"/\")}\n                  ></GoogleLogout> */}\n                </MenuItem>\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n              </Menu>\n            </>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <SideDrawer\n        sideItems={items}\n        isDrawerOpen={isDrawerOpen}\n        toggleDrawer={toggleDrawer}\n      />\n    </>\n  );\n}\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CardActions from \"@mui/material/CardActions\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { Post } from \"../types/Types\";\n\ntype IBlogType = {\n  post: Post;\n};\nconst BlogPost: React.FC<IBlogType> = (props): JSX.Element => {\n  const { post } = props;\n  return (\n    <Card\n      sx={{\n        maxWidth: 345,\n        height: 400,\n        backgroundColor: \"orange\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <CardHeader\n        avatar={<Avatar alt={post.owner.firstName} src={post.owner.picture} />}\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={`${post.owner.firstName} ${post.owner.lastName}`}\n        subheader={new Date(post.publishDate).toUTCString()}\n      />\n      <CardMedia\n        component=\"img\"\n        height=\"194\"\n        image={post.image}\n        alt={post.text}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {post.text}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n          <Typography variant=\"body2\" color=\"text.primary\">\n            {post.likes}\n          </Typography>\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default BlogPost;\n","import axios from \"axios\";\n\nexport const api = axios.create({\n  headers: {\n    \"app-id\": \"616d0a3c4c077651689d16bd\",\n  },\n  baseURL: \"https://dummyapi.io/data/v1\",\n});\n\n// export const getPosts = api.get(\"/post\").then((res) => res);\n// export const getPostsByUser = api.get(\"/user/:id/post\").then((res) => res.data);\n// export const getUsers = api.get(\"/user\").then((res) => res.data);\n","import { AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { api } from \"../api\";\nimport { Post } from \"../types/Types\";\n\ntype Posts = {\n  data: Array<Post>;\n  total: number;\n  page: number;\n  limit: number;\n};\n\nconst usePosts = (page: number, limit: number) =>\n  useQuery<Posts, Error>([\"posts\",page], () =>\n    api\n      .get(`/post?limit=${limit}&page=${page}`)\n      .then((res: AxiosResponse) => res.data),{ keepPreviousData : true }\n  );\n\nexport default usePosts;\n","import { css } from \"@emotion/react\";\nimport { Grid } from \"@mui/material\";\nimport { RingLoader } from \"react-spinners\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Spinner = () => (\n  <Grid\n    container\n    spacing={0}\n    direction=\"column\"\n    alignItems=\"center\"\n    sx={{\n      margin: \"0\",\n      position: \"absolute\",\n      top: \"50%\",\n    }}\n  >\n    <div className=\"sweet-loading\">\n      <RingLoader color=\"#85144b\" loading={true} css={override} size={100} />\n    </div>\n  </Grid>\n);\n\nexport default Spinner;\n","export function returnTotolPages(\n    dataLength: number | undefined,\n    limit: number\n  ): number {\n    if (!dataLength) {\n      return 0;\n    } else {\n      return Math.floor(dataLength / limit);\n    }\n  }","import { ExpandLess } from \"@mui/icons-material\";\nimport { IconButton, Theme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useState, useEffect } from \"react\";\n\ntype IScrollType = {\n  showBelow: number;\n};\nconst useStyles = makeStyles((theme: Theme) => ({\n  toTop: {\n    zIndex: 2,\n    position: \"fixed\",\n    bottom: \"3vh\",\n    backgroundColor: \"#c2185b\",\n    color: \"white\",\n    \"&:hover, &.Mui-focusVisible\": {\n      transition: \"0.4s\",\n      color: \"white\",\n      backgroundColor: \"#ce93d8\",\n    },\n    right: \"5%\",\n    [theme.breakpoints?.up(\"xs\")]: {\n      right: \"5%\",\n      backgroundColor: \"rgb(220,220,220,0.7)\",\n    },\n    [theme.breakpoints?.up(\"lg\")]: {\n      right: \"6.5%\",\n    },\n  },\n}));\nconst Scroll: React.FC<IScrollType> = ({ showBelow }): JSX.Element => {\n  const classes = useStyles();\n  const [show, setShow] = useState(showBelow ? false : true);\n\n  const handleScroll = () => {\n    if (window.pageYOffset > showBelow) {\n      if (!show) setShow(true);\n    } else {\n      if (show) setShow(false);\n    }\n  };\n\n  const handleClick = () => {\n    window[`scrollTo`]({ top: 0, behavior: `smooth` });\n  };\n\n  useEffect(() => {\n    if (showBelow) {\n      window.addEventListener(`scroll`, handleScroll);\n      return () => window.removeEventListener(`scroll`, handleScroll);\n    }\n  });\n\n  return (\n    <div>\n      {show && (\n        <IconButton\n          onClick={handleClick}\n          className={classes.toTop}\n          aria-label=\"to top\"\n          component=\"span\"\n        >\n          <ExpandLess />\n        </IconButton>\n      )}\n    </div>\n  );\n};\nexport default Scroll;\n","import * as React from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport BlogPost from \"../components/BlogPost\";\nimport usePosts from \"../hooks/usePosts\";\nimport { Alert, Pagination } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Post } from \"../types/Types\";\nimport Spinner from \"../components/Spinner\";\nimport { returnTotolPages } from \"../utils\";\nimport Scroll from \"../components/Scroll\";\nconst theme = createTheme();\n\nexport default function BlogPosts() {\n  const [page, setPage] = React.useState(1);\n  const limit = 20;\n\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPage(value);\n  };\n  const { data, isLoading, error } = usePosts(page - 1, limit);\n  if (error) {\n    return (\n      <Box>\n        <Alert variant=\"filled\" severity=\"error\">\n          {error.message}\n        </Alert>\n      </Box>\n    );\n  }\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  return (\n    <Box>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"lg\" sx={{ mt: 3 }}>\n          <main>\n            <Grid container spacing={2}>\n              {data?.data?.map((post: Post) => (\n                <Grid key={post.id} item xs={6} md={3}>\n                  <BlogPost post={post} />\n                </Grid>\n              ))}\n            </Grid>\n          </main>\n          <Scroll showBelow={400} />\n          <Box\n            display=\"flex\"\n            width={\"100%\"}\n            mt={2}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Pagination\n              page={page}\n              onChange={handleChange}\n              count={returnTotolPages(data?.total, limit)}\n              variant=\"outlined\"\n              color=\"secondary\"\n            />\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </Box>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Quote } from \"../types/Types\";\n\nexport default function Home() {\n  const [quote, setQuote] = useState<Quote>({ text: \"\", author: \"\" });\n  useEffect(() => {\n    axios\n      .get(\"https://api.quotable.io/random?tags=technology,famous-quotes\")\n      .then((res: AxiosResponse) => {\n        if (res.status === 200) {\n          setQuote({ text: res.data.content, author: res.data.author });\n        }\n      })\n      .catch((e) => {});\n  }, []);\n  return (\n    <Paper\n      sx={{\n        position: \"relative\",\n        backgroundColor: \"grey.800\",\n        color: \"#fff\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n        backgroundImage: `url(https://source.unsplash.com/random)`,\n      }}\n    >\n      {/* Increase the priority of the hero background image */}\n      {\n        <img\n          style={{ display: \"none\" }}\n          src=\"https://source.unsplash.com/random\"\n          alt=\"https://source.unsplash.com/random\"\n        />\n      }\n      <Box\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          backgroundColor: \"rgba(0,0,0,.3)\",\n        }}\n      />\n      <Grid container>\n        <Grid item md={6}>\n          <Box\n            sx={{\n              position: \"relative\",\n              p: { xs: 3, md: 6 },\n              pr: { md: 0 },\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h3\"\n              color=\"inherit\"\n              gutterBottom\n            >\n              Posty\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {quote.text}!!!\n            </Typography>\n            <Typography\n              sx={{ textDecoration: \"underline\" }}\n              gutterBottom\n              variant=\"h3\"\n              color=\"orange\"\n            >\n              {quote.author}\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","\nimport { AxiosResponse } from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { api } from \"../api\";\nimport { Owner } from \"../types/Types\";\n\ntype Users = {\n  data: Array<Owner>;\n  total: number;\n  page: number;\n  limit: number;\n};\nconst useUsers = (page: number, limit: number) =>\n  useQuery<Users,Error>([\"users\",page], () => api.get(`/user?limit=${limit}&page=${page}`).then((res: AxiosResponse) =>res.data),{ keepPreviousData : true });\n\n\nexport default useUsers;\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport { Owner } from \"../types/Types\";\n\ntype IUserType = {\n  users: Array<Owner> | undefined;\n};\nconst UserItem: React.FC<IUserType> = (props): JSX.Element => {\n  const { users } = props;\n  return (\n    <div>\n      {users?.map((user: Owner) => (\n        <List key={user.id} sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n          <ListItem alignItems=\"flex-start\" sx={{ cursor: \"pointer\" }}>\n            <ListItemAvatar>\n              <Avatar alt={user.firstName} src={user.picture} />\n            </ListItemAvatar>\n            <ListItemText\n              primary=\"Brunch this weekend?\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    sx={{ display: \"inline\", cursor: \"pointer\" }}\n                    component=\"span\"\n                    variant=\"body2\"\n                    color=\"text.secondary\"\n                  >\n                    {`${user.firstName} ${user.lastName}`}\n                  </Typography>\n                  {\" — I'll be in your neighborhood doing errands this…\"}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n        </List>\n      ))}\n    </div>\n  );\n};\nexport default UserItem;\n","import * as React from \"react\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Alert, Container, CssBaseline, Pagination } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport useUsers from \"../hooks/useUsers\";\nimport UserItem from \"../components/UserItem\";\nimport Spinner from \"../components/Spinner\";\nimport { returnTotolPages } from \"../utils\";\nimport Scroll from \"../components/Scroll\";\nconst theme = createTheme();\n\nexport interface IUsersListProps {}\n\nexport default function UsersList() {\n  const [page, setPage] = React.useState(1);\n  const limit = 20;\n\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPage(value);\n  };\n  const { data, isFetching, error } = useUsers(page - 1, limit);\n  if (error) {\n    return (\n      <Box>\n        <Alert variant=\"filled\" severity=\"error\">\n          {error.message}\n        </Alert>\n      </Box>\n    );\n  }\n  if (isFetching) {\n    return <Spinner />;\n  }\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"lg\" sx={{ mt: 3 }}>\n          <main>\n            <UserItem users={data?.data} />\n          </main>\n          <Scroll showBelow={400} />\n          <Box\n            display=\"flex\"\n            width={\"100%\"}\n            mt={2}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Pagination\n              page={page}\n              onChange={handleChange}\n              count={returnTotolPages(data?.total, limit)}\n              variant=\"outlined\"\n              color=\"secondary\"\n            />\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport const Profile = () => {\n  return <div>Profile</div>;\n};\n","import BlogPosts from \"./containers/BlogPosts\";\nimport Home from \"./components/Home\";\nimport UsersList from \"./containers/UsersList\";\nimport { Profile } from \"./containers/Profile\";\nimport { Navigate } from \"react-router\";\n\nconst routes = (isLoggedIn) => [\n  {\n    path: \"/\",\n    element: <Home />,\n  },\n  {\n    path: \"/posts\",\n    element: <BlogPosts />,\n  },\n  {\n    path: \"/users\",\n    element: <UsersList />,\n  },\n  {\n    path: \"/profile\",\n    element: <Profile />,\n  },\n  // {\n  //   path: \"/\",\n  //   element: <Home />,\n  // },\n  // {\n  //   path: \"/posts\",\n  //   element: !isLoggedIn ? <Navigate to=\"/\" /> : <BlogPosts />,\n  // },\n  // {\n  //   path: \"/users\",\n  //   element: !isLoggedIn ? <Navigate to=\"/\" /> : <UsersList />,\n  // },\n  // {\n  //   path: \"/profile\",\n  //   element: !isLoggedIn ? <Navigate to=\"/\" /> : <Profile />,\n  // },\n];\n\nexport default routes;\n","import { useRoutes } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport routes from \"./routes\";\nfunction App() {\n  const routing = useRoutes(routes());\n  return (\n    <>\n      <Header />\n      {routing}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      ,\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}